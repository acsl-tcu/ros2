#! /usr/bin/bash

# #1 : project name
# #2- : build target packages

OPT=""
# while (($# > 0)); do
#   case $1 in
#   # ...
#   -i | --image | --image=*)
if [[ "$1" =~ ^--image= ]]; then
  OPT=$(echo $1 | sed -e 's/^--image=//')
  shift
fi
#     else
#       OPT="$2"
#       shift
#     fi
#     ;;
#     # ...
#   esac
#   shift
# done

source $ACSL_ROS2_DIR/4_docker/common/scripts/super_echo
if [ $# -ge 1 ]; then
  #packs=${@:1:($# - 1)}
  packs=$@
else
  packs=$(my_packages)
fi

gecho "BUILD_PROJECT: build own ros packages"
#PACK=$(my_packages)
#LARGS=$PACK ROS_LAUNCH=launch_build.sh TAG=${1} docker compose up common -d
#echo $TAG
#TAG=${TAG} dup build $packs

fx86=$(uname -a | grep x86)
if [[ -n $fx86 ]]; then
  x86="_x86"
else
  x86=""
fi

if [[ ${OPT} == "" ]]; then
  TAG=image_${PROJECT}${TARGET}${x86}
  exist_image=$(docker images kasekiguchi/acsl-common:${TAG} | grep ${TAG})
  if [[ -z $exist_image ]]; then
    recho "create ${TAG} image first by
  dsbuild"
  else
    dup build $packs
    # acsl-common:$TAG を build コンテナとしてcommon サービスで起動
    # 中で　launch_build.sh　を実行し自作パッケージをcolcon buildする

    dlogs build
    gecho "docker commit : from build container to image_${TAG} tagged image"
    dcommit build ${TAG}
    gecho "remove build container"
    drm build
  fi
else
  echo "!!!!!!!!!!!!!!!!!!"
  dup --image=${OPT} build $packs
  dlogs build
  gecho "docker commit : from build container to ${OPT} tagged image"
  dcommit build ${OPT}
  gecho "remove build container"
  drm build
fi
