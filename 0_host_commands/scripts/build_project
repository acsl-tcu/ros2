#! /usr/bin/bash
# update the image by "colcon build" in target image container
# target image : image_${PROJECT} or indicate by --image=target_image
# [usage]
# $@ : build target packages
# build_project ros_packages
# build_project --image=image_name ros_packages

if [[ "$1" =~ ^--image= ]]; then
  IMAGE=$(echo $1 | sed -e 's/^--image=//')
  shift
else
  TAG=image_${PROJECT}${TARGET}${x86}
  IMAGE=kasekiguchi/acsl-common:${TAG}
fi

source $ACSL_ROS2_DIR/4_docker/common/scripts/super_echo
if [ $# -ge 1 ]; then
  #packs=${@:1:($# - 1)}
  packs=$@
else
  packs=$(my_packages)
fi

gecho "BUILD_PROJECT: build own ros packages on ${IMAGE}"

cp ${ACSL_ROS2_DIR}/1_launcher/launch_build.sh ${ACSL_WORK_DIR}/1_launcher/
chmod a+x ${ACSL_WORK_DIR}/1_launcher/launch_build.sh

exist_image=$(docker images ${IMAGE} | grep ${IMAGE%%:*})
if [[ -z $exist_image ]]; then
  recho "create ${IMAGE} image first by
  dsbuild"
else
  dup --image=${IMAGE} build $packs
  # acsl-common:$TAG を build コンテナとしてcommon サービスで起動
  # 中で　launch_build.sh　を実行し自作パッケージをcolcon buildする
  packs_list=$(packs)
  gecho "DLOGS: "
  dlogs build_${packs_list[0]}
  gecho "docker commit :: from build_${packs_list[0]} container to ${IMAGE} tagged image"
  dcommit build_${packs_list[0]} ${IMAGE}
  gecho "remove build_${packs_list[0]} container"
  drm build_${packs_list[0]}
fi
rm -f ${ACSL_WORK_DIR}/1_launcher/launch_build.sh
