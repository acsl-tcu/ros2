#! /usr/bin/bash
# arg1 : target container_name,  arg2- (option) : argument for ros node launch
# Example :
# dup acs tokyu debug : run tokyu project in debug mode
# dup dev : simple up acsl-common:image_${PROJECT}${TARGET}

OPT=""
if [[ "$1" =~ ^--image= ]]; then
  OPT=$(echo $1 | sed -e 's/^--image=//')
  shift
fi

cd $ACSL_ROS2_DIR/4_docker
source $ACSL_ROS2_DIR/4_docker/common/scripts/super_echo
gecho "DUP: $OPT : $1 : ${@:2:($# - 1)}"
if [ $# -ge 1 ]; then
  if [ $1 = "all" ]; then
    $ACSL_WORK_DIR/project_launch${TARGET}.sh
  else
    launch_args=${@:2:($# - 1)}
    #LARGS=$launch_args HOSTNAME=$(hostname | sed -e 's/-/_/g') docker compose --env-file envfiles/env.$1 up common -d
    TAG=$1
    fx86=$(uname -a | grep x86)
    if [[ -n $fx86 ]]; then
      x86="_x86"
    else
      x86=""
    fi
    echo "===== TAG: ${TAG%_x86}${x86} ===="

    exist_image=$(docker images kasekiguchi/acsl-common:${TAG%_x86}${x86} | grep ${TAG%_x86}${x86})
    echo "image : $exist_image "
    if [[ -z $exist_image ]]; then
      echo "== image ${TAG%_x86}${x86} does NOT exists. Use image_${PROJECT}${TARGET}${x86} alternatively."
      TAG=image_${PROJECT}${TARGET}${x86}
    else
      echo "== image ${TAG%_x86}${x86} exists"
      TAG=${TAG}${x86}
    fi
    if [[ ${OPT} == "" ]]; then
      echo "TAG : $TAG : 1 : $1"
      echo $launch_args
      # CONTAINER_NAME=$1
      if [[ $1 == "dev" ]]; then
        cp $ACSL_ROS2_DIR/1_launcher/launch_dev.sh $ACSL_WORK_DIR/1_launcher/
        chmod a+x $ACSL_WORK_DIR/1_launcher/launch_dev.sh
      fi
      ROS_LAUNCH=$(ls -v $ACSL_WORK_DIR/1_launcher/ | grep launch_$1 | fmt | awk '{print $NF}')
      echo "TAG=$TAG CONTAINER_NAME=$1 COMPOSE_PROJECT_NAME=$1_${PROJECT} ROS_LAUNCH=$ROS_LAUNCH LARGS=$launch_args HOSTNAME=$(hostname | sed -e 's/-/_/g') docker compose up common -d"
      TAG=$TAG CONTAINER_NAME=$1 COMPOSE_PROJECT_NAME=$1_${PROJECT} ROS_LAUNCH=$ROS_LAUNCH LARGS=$launch_args HOSTNAME=$(hostname | sed -e 's/-/_/g') docker compose up common -d
    else
      echo "TAG::${OPT} CONTAINER_NAME=build COMPOSE_PROJECT_NAME=$1_${PROJECT} ROS_LAUNCH=launch_build.sh LARGS=$launch_args HOSTNAME=$(hostname | sed -e 's/-/_/g') docker compose up common -d"
      TAG=${OPT} CONTAINER_NAME=build COMPOSE_PROJECT_NAME=$1_${PROJECT} ROS_LAUNCH=launch_build.sh LARGS=$launch_args HOSTNAME=$(hostname | sed -e 's/-/_/g') docker compose up common -d
    fi
  fi
fi

# 記述の意味
# HOSTNAME=$(hostname | sed -e "s/-/_/g") : HOSTのhostnameをros2 nodeのnamespaceに追加
# Dockerを表すDという接頭辞を付けたhostnameがnamespaceになる。
# 例：
#  node名：fcu
#  hostname : rp5-2
# の場合　/Drp5_2/fcu　となる。　hostname内の 「-」 は「_」 に置換される
# docker 以降はdocker の普通の使い方なのでREADME_DOCKER参照
